{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../service/themplate.service\";\nexport let ConfigService = /*#__PURE__*/(() => {\n  class ConfigService {\n    constructor(http, router, them) {\n      this.http = http;\n      this.router = router;\n      this.them = them;\n      this.configUrlBasic = this.them.configUrlBasic;\n      this.loading = false;\n      this.configUrl = \"\";\n    } //*****************FileUploader************************\n\n\n    FileUploader(formData) {\n      this.configUrl = this.configUrlBasic + '/Uploader/Post';\n      return this.http.post(this.configUrl, formData).pipe(catchError(this.handleError));\n    }\n\n    FetchBasicDate(Lang, GroupType) {\n      this.configUrl = this.configUrlBasic + '/BasicData/';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          GroupType: GroupType\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    FetchParamShowSearch(Lang, ProductGroupID, WebSite) {\n      this.configUrl = this.configUrlBasic + '/ParamShowSearch/'; //نمایش صفحه لیست محصولات\n\n      if (WebSite == null || WebSite == '') {\n        return this.http.get(this.configUrl, {\n          params: {\n            Lang: Lang,\n            UserName: '',\n            IP: '',\n            ProductGroupID: ProductGroupID,\n            IsShowSearch: 'true'\n          }\n        }).pipe(catchError(this.handleError));\n      } //-------------------نمایش صفحه اول سایت\n      else {\n        return this.http.get(this.configUrl, {\n          params: {\n            Lang: Lang,\n            UserName: '',\n            IP: '',\n            WebSite: WebSite\n          }\n        }).pipe(catchError(this.handleError));\n      }\n    }\n\n    FetchProductDatail(Lang, UserName, ProductGroupID) {\n      this.configUrl = this.configUrlBasic + '/ParamShowSearch/';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          IP: '',\n          ProductGroupID: ProductGroupID,\n          IsShowSearch: null\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    FetchProductSelect(Lang, loguser, logIP, isSpecialSales, productGroupID, productID, companyID, stringParamGroupType, stringParamGroupName, IsNewCreate, PageNumber, OrderByColumn, OrderDirection) {\n      this.configUrl = this.configUrlBasic + '/ProductSelect/';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          loguser: loguser,\n          isSpecialSales: isSpecialSales,\n          productGroupID: productGroupID,\n          productID: productID,\n          companyID: companyID,\n          stringParamGroupType: stringParamGroupType,\n          stringParamGroupName: stringParamGroupName,\n          IsNewCreate: IsNewCreate,\n          PageNumber: PageNumber,\n          OrderByColumn: OrderByColumn,\n          OrderDirection: OrderDirection\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    FetchProductSelect_SameProduc(Lang, loguser, productID, companyID) {\n      this.configUrl = this.configUrlBasic + '/ProductSameSelect/';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          loguser: loguser,\n          productID: productID // companyID: companyID,\n\n        }\n      }).pipe(catchError(this.handleError));\n    } //BaseData**********************************************************************\n\n\n    FetchBaseData_GroupType(Lang, UserName, GroupType, CodeChar) {\n      this.configUrl = this.configUrlBasic + '/BaseData/';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          GroupType: GroupType,\n          CodeChar: CodeChar\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    FetchBaseData_ID(Lang, UserName, ID) {\n      this.configUrl = this.configUrlBasic + '/BaseData/';\n      return this.http.get(this.configUrl, {\n        params: {\n          ID: ID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    FetchBaseData_GroupSelect(Lang, UserName, CodeChar) {\n      this.configUrl = this.configUrlBasic + '/GroupSelectBaseTable/';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          CodeChar: CodeChar\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    FetchProductSpecificationSelect(Lang, UserName, GroupType, GroupTypeName, CompanyID) {\n      this.configUrl = this.configUrlBasic + '/ProductSpecification/';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          GroupType: GroupType,\n          GroupTypeName: GroupTypeName,\n          companyID: CompanyID\n        }\n      }).pipe(catchError(this.handleError));\n    } //Company***********************************************************************\n\n\n    FetchCompany_Filter(Lang, UserName) {\n      this.configUrl = this.configUrlBasic + '/SelectCompany/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    FetchCompany_FilterID(Lang, UserName, ID) {\n      this.configUrl = this.configUrlBasic + '/SelectCompany/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: '',\n          ID: ID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    FetchCompany_FilterGet(Lang, CompanyName, UserName, CountryID_BasicData, CityID_BasicData, CompanyGroupID_BaseData, WesiteUrl) {\n      this.configUrl = this.configUrlBasic + '/SelectCompany/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          CompanyName: CompanyName,\n          CountryID_BasicData: CountryID_BasicData.toString(),\n          CityID_BasicData: CityID_BasicData.toString(),\n          CompanyGroupID_BaseData: CompanyGroupID_BaseData\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    FetchCompany_WesiteUrlGet(Lang, UserName, WesiteUrl) {\n      this.configUrl = this.configUrlBasic + '/SelectCompanyWebsiteUrl/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          WesiteUrl: WesiteUrl\n        }\n      }).pipe(catchError(this.handleError));\n    } //-----------------------------------------------------\n\n\n    DeleteCompany_ID(ID, UserName, Lang) {\n      this.configUrl = this.configUrlBasic + '/DeleteCompany/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          ID: ID,\n          UserName: UserName,\n          Lang: Lang\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    InsertCompany(params) {\n      this.configUrl = this.configUrlBasic + '/InsertCompany/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    }\n\n    UpdateCompany(params) {\n      this.configUrl = this.configUrlBasic + '/UpdateCompany/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //UserProfile*********************************************************************\n\n\n    FetchUserProfile_Filter(Lang, UserName) {\n      this.configUrl = this.configUrlBasic + '/UserProfile/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    FetchUserProfile_FilterID(Lang, UserName, ID) {\n      this.configUrl = this.configUrlBasic + '/UserProfile/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ID: ID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    FetchUserProfile_FilterDefaultCompany(Lang, UserName) {\n      this.configUrl = this.configUrlBasic + '/UserProfile/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          isDefault: 'true'\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterUserProfileGet(Lang, UserName, UserID, Name, Family, CompanyID, RoleID, Mobile, TokenID, Email, NationalCode) {\n      this.configUrl = this.configUrlBasic + '/UserProfile/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          UserID: UserID,\n          Name: Name,\n          Family: Family,\n          CompanyID: CompanyID,\n          RoleID: RoleID,\n          Mobile: Mobile,\n          TokenID: TokenID,\n          Email: Email,\n          NationalCode: NationalCode\n        }\n      }).pipe(catchError(this.handleError));\n    } //-------------------------------------------------\n    //------------------------------------------------\n\n\n    DeleteUserProfile_ID(ID, UserName) {\n      this.configUrl = this.configUrlBasic + '/DeleteUserProfile/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          ID: ID,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    InserUserProfile(params) {\n      this.configUrl = this.configUrlBasic + '/InsertUserProfile/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    }\n\n    UpdateUserProfile(params) {\n      this.configUrl = this.configUrlBasic + '/UpdateUserProfile/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //UserProfile*********************************************************************\n\n\n    FetchUserRole_Filter(Lang, UserName) {\n      this.configUrl = this.configUrlBasic + '/SelectUserRole/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    FetchUserRole_FilterID(Lang, UserName, ID) {\n      this.configUrl = this.configUrlBasic + '/SelectUserRole/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ID: ID\n        }\n      }).pipe(catchError(this.handleError));\n    } //string Lang, string UserName, string RoleName, bool Active, int ? ParentLangID\n\n\n    Fetch_FilterUserRoleGet(Lang, UserName, RoleName) {\n      this.configUrl = this.configUrlBasic + '/SelectUserRole/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          RoleName: RoleName\n        }\n      }).pipe(catchError(this.handleError));\n    } //-------------------------------------------------\n\n\n    DeleteUserRole_ID(ID, UserName) {\n      this.configUrl = this.configUrlBasic + '/DeleteUserRole/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          ID: ID,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    InserUserRole(params) {\n      this.configUrl = this.configUrlBasic + '/InsertUserRole/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    }\n\n    UpdateUserRole(params) {\n      this.configUrl = this.configUrlBasic + '/UpdateUserRole/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //Settings************************************************************************\n\n\n    InsertSettings(Name, UserName, Group, Lang) {\n      this.configUrl = this.configUrlBasic + '/InsertBaseData/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Name: Name,\n          UserName: UserName,\n          Group: Group,\n          Lang: Lang\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    handleError(error) {\n      let msg = '';\n\n      if (error.error instanceof ErrorEvent) {\n        // client-side error\n        msg = error.error.message;\n      } else {\n        // server-side error\n        msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n\n      return throwError(msg);\n    } //UserAccess**********************************************************************\n    //---------------------------------UserSubMenu----------------------------------\n\n\n    Fetch_FilterUserSubMenuGet(Lang, UserName, Title, ControlID, Active, IsShow) {\n      this.configUrl = this.configUrlBasic + '/SelectUserSubMenu/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          Title: Title,\n          ControlID: ControlID,\n          Active: Active,\n          IsShow: IsShow\n        }\n      }).pipe(catchError(this.handleError));\n    } //---------------------------------UserMenu------------------------------------\n\n\n    Fetch_FilterUserMenuGet(Lang, UserName, Title, Active, IsShow) {\n      this.configUrl = this.configUrlBasic + '/SelectUserMenu/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          Title: Title,\n          Active: Active,\n          IsShow: IsShow\n        }\n      }).pipe(catchError(this.handleError));\n    } //--------------------------------UserNotAcessMenu----------------------------\n\n\n    Fetch_FilterUserNotAcessMenuGet(Lang, UserName, RoleID, Title, ControlID, Active, IsShow) {\n      this.configUrl = this.configUrlBasic + '/SelectUserNotAcessMenu/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          Title: Title,\n          ControlID: ControlID,\n          Active: Active,\n          IsShow: IsShow,\n          RoleID: RoleID\n        }\n      }).pipe(catchError(this.handleError));\n    } //---------------------------------UserAcessMenu-----------------------------------\n\n\n    Fetch_FilterUserAcessMenuGet(Lang, UserName, RoleID, Title, ControlID, Active, IsShow) {\n      this.configUrl = this.configUrlBasic + '/SelectUserAccessMenu/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          Title: Title,\n          ControlID: ControlID,\n          Active: Active,\n          IsShow: IsShow,\n          RoleID: RoleID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    DeleteUserAcess_ID(ID, UserName) {\n      this.configUrl = this.configUrlBasic + '/DeleteUserAccess/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          ID: ID,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    InserUserAcess(params) {\n      this.configUrl = this.configUrlBasic + '/InsertUserAccess/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //--8:04:18 AM Friday, June 19, 2020\n    //ProductGroup*********************************************************************\n\n\n    Fetch_FilterProductGroupGet(UserName, Lang, ID, ParentID, Title, ParentTitle, IsLastChid) {\n      this.configUrl = this.configUrlBasic + '/SelectProductGroup/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          UserName: UserName,\n          ID: ID,\n          Lang: Lang,\n          ParentID: ParentID,\n          Title: Title,\n          ParentTitle: ParentTitle,\n          IsLastChid: IsLastChid\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterProductGroup(Lang, UserName) {\n      this.configUrl = this.configUrlBasic + '/SelectProductGroup/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterProductGroupID(Lang, UserName, ID) {\n      this.configUrl = this.configUrlBasic + '/SelectProductGroup/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ID: ID\n        }\n      }).pipe(catchError(this.handleError));\n    } //--8:04:30 AM Friday, June 19, 2020\n    //ProductGroup*********************************************************************\n    //InsertProductGroup---------------------------------------------------------------\n\n\n    InsertProductGroup(params) {\n      this.configUrl = this.configUrlBasic + '/InsertProductGroup/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //UpdateProductGroup---------------------------------------------------------------\n\n\n    UpdateProductGroup(params) {\n      this.configUrl = this.configUrlBasic + '/UpdateProductGroup/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //DeleteProductGroup---------------------------------------------------------------\n\n\n    DeleteProductGroupID(ID, UserName, Lang) {\n      this.configUrl = this.configUrlBasic + '/DeleteProductGroup/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          ID: ID,\n          UserName: UserName,\n          Lang: Lang\n        }\n      }).pipe(catchError(this.handleError));\n    } //--8:05:56 AM Friday, June 19, 2020\n    //ProductGroupDetail*********************************************************************\n\n\n    Fetch_FilterProductGroupDetailGet(UserName, Lang, ID, ProductGroupID) {\n      this.configUrl = this.configUrlBasic + '/SelectProductGroupDetail/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ID: ID,\n          ProductGroupID: ProductGroupID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterProductGroupDetail(Lang, UserName) {\n      this.configUrl = this.configUrlBasic + '/SelectProductGroupDetail/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterProductGroupDetailID(Lang, UserName, ID) {\n      this.configUrl = this.configUrlBasic + '/SelectProductGroupDetail/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ID: ID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_SelectProductGroupDetailGroupBy(Lang, UserName) {\n      this.configUrl = this.configUrlBasic + '/SelectProductGroupDetailGroupBy/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    } //--8:06:01 AM Friday, June 19, 2020\n    //ProductGroupDetail*********************************************************************\n    //InsertProductGroupDetail---------------------------------------------------------------\n\n\n    InsertProductGroupDetail(params) {\n      this.configUrl = this.configUrlBasic + '/InsertProductGroupDetail/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //UpdateProductGroupDetail---------------------------------------------------------------\n\n\n    UpdateProductGroupDetail(params) {\n      this.configUrl = this.configUrlBasic + '/UpdateProductGroupDetail/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //DeleteProductGroupDetail---------------------------------------------------------------\n\n\n    DeleteProductGroupDetailID(ID, UserName, Lang) {\n      this.configUrl = this.configUrlBasic + '/DeleteProductGroupDetail/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          ID: ID,\n          UserName: UserName,\n          Lang: Lang\n        }\n      }).pipe(catchError(this.handleError));\n    } //--8:07:34 AM Friday, June 19, 2020\n    //Product*********************************************************************\n\n\n    Fetch_FilterProductGet(UserName, Lang, ID, CompanyID, ProductGroupID, BarCode, Name) {\n      this.configUrl = this.configUrlBasic + '/SelectProduct/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          UserName: UserName,\n          Lang: Lang,\n          BarCode: BarCode,\n          CompanyID: CompanyID,\n          ID: ID,\n          Name: Name,\n          ProductGroupID: ProductGroupID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterProduct(Lang, UserName) {\n      this.configUrl = this.configUrlBasic + '/SelectProduct/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterProductID(Lang, UserName, ID) {\n      this.configUrl = this.configUrlBasic + '/SelectProduct/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ID: ID\n        }\n      }).pipe(catchError(this.handleError));\n    } //--8:07:37 AM Friday, June 19, 2020\n    //Product*********************************************************************\n    //InsertProduct---------------------------------------------------------------\n\n\n    InsertProduct(PostData) {\n      this.configUrl = this.configUrlBasic + '/InsertProduct/Post';\n      return this.http.post(this.configUrl, {\n        PostData\n      }).pipe(catchError(this.handleError));\n    } //UpdateProduct---------------------------------------------------------------\n\n\n    UpdateProduct(params) {\n      this.configUrl = this.configUrlBasic + '/UpdateProduct/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //DeleteProduct---------------------------------------------------------------\n\n\n    DeleteProductID(ID, UserName, Lang) {\n      this.configUrl = this.configUrlBasic + '/DeleteProduct/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          ID: ID,\n          UserName: UserName,\n          Lang: Lang\n        }\n      }).pipe(catchError(this.handleError));\n    } //--6:08:14 AM Friday, September 25, 2020\n    //ProductImage*********************************************************************\n\n\n    Fetch_FilterProductImageGet(Lang, UserName, ProductID, ID) {\n      this.configUrl = this.configUrlBasic + '/SelectProductImage/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ProductID: ProductID,\n          ID: ID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterProductImage(Lang, UserName) {\n      this.configUrl = this.configUrlBasic + '/SelectProductImage/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterProductImageID(Lang, UserName, ID) {\n      this.configUrl = this.configUrlBasic + '/SelectProductImage/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ID: ID\n        }\n      }).pipe(catchError(this.handleError));\n    } //--6:08:19 AM Friday, September 25, 2020\n    //ProductImage*********************************************************************\n    //InsertProductImage---------------------------------------------------------------\n\n\n    InsertProductImage(params) {\n      this.configUrl = this.configUrlBasic + '/InsertProductImage/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //UpdateProductImage---------------------------------------------------------------\n\n\n    UpdateProductImage(params) {\n      this.configUrl = this.configUrlBasic + '/UpdateProductImage/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //DeleteProductImage---------------------------------------------------------------\n\n\n    DeleteProductImageID(ID, UserName, Lang) {\n      this.configUrl = this.configUrlBasic + '/DeleteProductImage/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          ID: ID,\n          UserName: UserName,\n          Lang: Lang\n        }\n      }).pipe(catchError(this.handleError));\n    } //-------------------------------------------------------\n\n\n    Fetch_FilterProductDetail_SpecificationGet(Lang, UserName, ProductID) {\n      this.configUrl = this.configUrlBasic + '/SelectProductDetail_Specification/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ProductID: ProductID\n        }\n      }).pipe(catchError(this.handleError));\n    } //--8:19:19 AM Friday, December 11, 2020\n    //Customer*********************************************************************\n\n\n    Fetch_FilterCustomerGet(Lang, UserName, ID, CompanyID, Mobile, Email, FullName, CodeMelli) {\n      this.configUrl = this.configUrlBasic + '/SelectCustomer/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          CompanyID: CompanyID,\n          Email: Email,\n          FullName: FullName,\n          ID: ID,\n          Mobile: Mobile,\n          CodeMelli: CodeMelli\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterCustomer(Lang, UserName) {\n      this.configUrl = this.configUrlBasic + '/SelectCustomer/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterCustomerID(Lang, UserName, ID) {\n      this.configUrl = this.configUrlBasic + '/SelectCustomer/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ID: ID\n        }\n      }).pipe(catchError(this.handleError));\n    } //InsertOrder---------------------------------------------------------------\n\n\n    InsertOrder(params) {\n      this.configUrl = this.configUrlBasic + '/InsertOrder/post';\n      return this.http.post(this.configUrl, params).pipe(catchError(this.handleError));\n    } //--7:08:10 AM Thursday, January 14, 2021\n    //Purchase*********************************************************************\n\n\n    Fetch_FilterPurchaseGet(Lang, UserName, ID, CompanyID, CustomerID, FromDate, ToDate, FullName, Status) {\n      this.configUrl = this.configUrlBasic + '/SelectPurchase/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ID: ID,\n          CompanyID: CompanyID,\n          CustomerID: CustomerID,\n          FromDate: FromDate,\n          ToDate: ToDate,\n          FullName: FullName,\n          Status: Status\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterPurchase(Lang, UserName) {\n      this.configUrl = this.configUrlBasic + '/SelectPurchase/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterPurchaseID(Lang, UserName, ID) {\n      this.configUrl = this.configUrlBasic + '/SelectPurchase/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ID: ID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    UpdatePurchase(params) {\n      this.configUrl = this.configUrlBasic + '/UpdatePurchase/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //--11:55:12 AM Monday, February 15, 2021\n    //CompanyProductGroup*********************************************************************\n\n\n    Fetch_FilterCompanyProductGroupGet(CompanyID, Lang) {\n      this.configUrl = this.configUrlBasic + '/SelectCompanyProductGroup/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          CompanyID: CompanyID,\n          Lang: Lang\n        }\n      }).pipe(catchError(this.handleError));\n    } //------------------Social Networks-------------\n\n\n    SendTelegram(CompanyID) {\n      this.configUrl = this.configUrlBasic + '/Telegram/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          CompanyID: CompanyID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    SendInstagram(CompanyID) {\n      this.configUrl = this.configUrlBasic + '/Instagram/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          CompanyID: CompanyID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    GetTelegramUserChatID(CompanyID) {\n      this.configUrl = this.configUrlBasic + '/TelegramUserChatID/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          CompanyID: CompanyID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    GetTelegramGroupChatID(CompanyID) {\n      this.configUrl = this.configUrlBasic + '/TelegramGroupChatID/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          CompanyID: CompanyID\n        }\n      }).pipe(catchError(this.handleError));\n    } //--8:51:44 PM Monday, March 1, 2021\n    //PageGenerator*********************************************************************\n\n\n    Fetch_FilterPageGeneratorGet(Lang, LogUser, CompanyID, ID, PageContent, PageLocationID, Active) {\n      this.configUrl = this.configUrlBasic + '/SelectPageGenerator/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          LogUser: LogUser,\n          CompanyID: CompanyID,\n          ID: ID,\n          PageContent: PageContent,\n          PageLocationID: PageLocationID,\n          Active: Active\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterPageGenerator(Lang, UserName) {\n      this.configUrl = this.configUrlBasic + '/SelectPageGenerator/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterPageGeneratorID(Lang, UserName, ID) {\n      this.configUrl = this.configUrlBasic + '/SelectPageGenerator/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ID: ID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterPageGeneratorCompanyID(Lang, UserName, CompanyID) {\n      this.configUrl = this.configUrlBasic + '/SelectPageGenerator/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          CompanyID: CompanyID\n        }\n      }).pipe(catchError(this.handleError));\n    } //--10:22:41 PM Monday, March 1, 2021\n    //PageGenerator*********************************************************************\n    //InsertPageGenerator---------------------------------------------------------------\n\n\n    InsertPageGenerator(params) {\n      this.configUrl = this.configUrlBasic + '/InsertPageGenerator/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //UpdatePageGenerator---------------------------------------------------------------\n\n\n    UpdatePageGenerator(params) {\n      this.configUrl = this.configUrlBasic + '/UpdatePageGenerator/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //DeletePageGenerator---------------------------------------------------------------\n\n\n    DeletePageGeneratorID(ID, UserName, Lang) {\n      this.configUrl = this.configUrlBasic + '/DeletePageGenerator/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          ID: ID,\n          UserName: UserName,\n          Lang: Lang\n        }\n      }).pipe(catchError(this.handleError));\n    } //-------------------------------\n\n\n    Fetch_FilterPageCount(CompanyID, ProductGroupID) {\n      this.configUrl = this.configUrlBasic + '/PageCount/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          CompanyID: CompanyID,\n          ProductGroupID: ProductGroupID\n        }\n      }).pipe(catchError(this.handleError));\n    } //--10:34:07 PM Monday, March 22, 2021\n    //VisitedHistory*********************************************************************\n\n\n    Fetch_FilterVisitedHistoryGet(CompanyID, durationDay) {\n      this.configUrl = this.configUrlBasic + '/VisitedHistory/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          CompanyID: CompanyID,\n          durationDay: durationDay\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterVisitedHistory(Lang, UserName) {\n      this.configUrl = this.configUrlBasic + '/VisitedHistory/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterVisitedHistoryID(Lang, UserName, ID) {\n      this.configUrl = this.configUrlBasic + '/VisitedHistory/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ID: ID\n        }\n      }).pipe(catchError(this.handleError));\n    } //--11:12:04 PM Thursday, April 1, 2021\n    //ProductUserComment*********************************************************************\n\n\n    Fetch_FilterProductUserCommentGet(Lang, Loguser, LogIP, ProductID, CompanyID, Active) {\n      this.configUrl = this.configUrlBasic + '/SelectProductUserComment/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          Loguser: Loguser,\n          LogIP: LogIP,\n          ProductID: ProductID,\n          CompanyID: CompanyID,\n          Active: Active\n        }\n      }).pipe(catchError(this.handleError));\n    } //--11:13:02 PM Thursday, April 1, 2021\n    //ProductUserComment*********************************************************************\n    //InsertProductUserComment---------------------------------------------------------------\n\n\n    InsertProductUserComment(params) {\n      this.configUrl = this.configUrlBasic + '/InsertProductUserComment/Post';\n      return this.http.post(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //UpdateProductUserComment---------------------------------------------------------------\n\n\n    UpdateProductUserComment(params) {\n      this.configUrl = this.configUrlBasic + '/UpdateProductUserComment/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //DeleteProductUserComment---------------------------------------------------------------\n\n\n    DeleteProductUserCommentID(ID, UserName, Lang) {\n      this.configUrl = this.configUrlBasic + '/DeleteProductUserComment/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          ID: ID,\n          UserName: UserName,\n          Lang: Lang\n        }\n      }).pipe(catchError(this.handleError));\n    } //--------------------RestaurantSetting----------------------------------\n\n\n    FetchCompanySetting(Lang, UserName, CompanyID, Category) {\n      this.configUrl = this.configUrlBasic + '/SelectRestaurantSetting/';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          CompanyID: CompanyID,\n          Category: Category\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    InsertCompanySetting(Postdata) {\n      this.configUrl = this.configUrlBasic + '/InsertRestauranSetting/post';\n      return this.http.post(this.configUrl, {\n        Postdata\n      }).pipe(catchError(this.handleError));\n    } //--1:25:53 PM Tuesday, April 6, 2021\n    //PageMenu*********************************************************************\n\n\n    Fetch_FilterPageMenuGet(Lang, UserName, CompanyID) {\n      this.configUrl = this.configUrlBasic + '/SelectPageMenu/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          CompanyID: CompanyID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterPageMenu(Lang, UserName) {\n      this.configUrl = this.configUrlBasic + '/SelectPageMenu/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterPageMenuID(Lang, UserName, ID) {\n      this.configUrl = this.configUrlBasic + '/SelectPageMenu/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          Lang: Lang,\n          UserName: UserName,\n          ID: ID\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n    Fetch_FilterPageMenuActive() {\n      this.configUrl = this.configUrlBasic + '/SelectMenuPageActive/Get';\n      return this.http.get(this.configUrl).pipe(catchError(this.handleError));\n    } //--1:26:19 PM Tuesday, April 6, 2021\n    //PageMenu*********************************************************************\n    //InsertPageMenu---------------------------------------------------------------\n\n\n    InsertPageMenu(params) {\n      this.configUrl = this.configUrlBasic + '/InsertPageMenu/Get';\n      return this.http.get(this.configUrl, {\n        params\n      }).pipe(catchError(this.handleError));\n    } //UpdatePageMenu---------------------------------------------------------------\n\n\n    UpdatePageMenu(Postdata) {\n      this.configUrl = this.configUrlBasic + '/UpdatePageMenu/Post';\n      return this.http.post(this.configUrl, {\n        Postdata\n      }).pipe(catchError(this.handleError));\n    } //DeletePageMenu---------------------------------------------------------------\n\n\n    DeletePageMenuID(ID, UserName, Lang) {\n      this.configUrl = this.configUrlBasic + '/DeletePageMenu/Get';\n      return this.http.get(this.configUrl, {\n        params: {\n          ID: ID,\n          UserName: UserName,\n          Lang: Lang\n        }\n      }).pipe(catchError(this.handleError));\n    }\n\n  }\n\n  ConfigService.ɵfac = function ConfigService_Factory(t) {\n    return new (t || ConfigService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.them));\n  };\n\n  ConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConfigService,\n    factory: ConfigService.ɵfac\n  });\n  return ConfigService;\n})();","map":null,"metadata":{},"sourceType":"module"}