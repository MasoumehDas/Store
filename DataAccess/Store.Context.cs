//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StoreEntities : DbContext
    {
        public StoreEntities()
            : base("name=StoreEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CompanyNameDetail> CompanyNameDetails { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductDescription> ProductDescriptions { get; set; }
        public virtual DbSet<ProductImage> ProductImages { get; set; }
        public virtual DbSet<Purchase> Purchases { get; set; }
        public virtual DbSet<UserMenu> UserMenus { get; set; }
        public virtual DbSet<UserProfile> UserProfiles { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<UserSubMenu> UserSubMenus { get; set; }
        public virtual DbSet<BasicData> BasicDatas { get; set; }
        public virtual DbSet<ProductGroupDetail> ProductGroupDetails { get; set; }
        public virtual DbSet<ProductGroup> ProductGroups { get; set; }
        public virtual DbSet<PurchaseDetail> PurchaseDetails { get; set; }
        public virtual DbSet<CompanyProductGroup> CompanyProductGroups { get; set; }
        public virtual DbSet<PageGenerator> PageGenerators { get; set; }
        public virtual DbSet<Setting> Settings { get; set; }
        public virtual DbSet<CompanySetting> CompanySettings { get; set; }
        public virtual DbSet<ProductUserComment> ProductUserComments { get; set; }
        public virtual DbSet<PageMenu> PageMenus { get; set; }
        public virtual DbSet<ProductDetail> ProductDetails { get; set; }
        public virtual DbSet<ProductSpecification> ProductSpecifications { get; set; }
        public virtual DbSet<UserAccess> UserAccesses { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<BankAcount> BankAcounts { get; set; }
        public virtual DbSet<CompanyTransportation> CompanyTransportations { get; set; }
    
        public virtual ObjectResult<sp_BaseData_GroupSelect_Result> sp_BaseData_GroupSelect(string lang, string codeChar)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var codeCharParameter = codeChar != null ?
                new ObjectParameter("CodeChar", codeChar) :
                new ObjectParameter("CodeChar", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BaseData_GroupSelect_Result>("sp_BaseData_GroupSelect", langParameter, codeCharParameter);
        }
    
        public virtual ObjectResult<sp_ProductImage_Select_Result> sp_ProductImage_Select(string lang, string loguser, Nullable<int> productID, Nullable<int> iD)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var loguserParameter = loguser != null ?
                new ObjectParameter("Loguser", loguser) :
                new ObjectParameter("Loguser", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductImage_Select_Result>("sp_ProductImage_Select", langParameter, loguserParameter, productIDParameter, iDParameter);
        }
    
        public virtual ObjectResult<sp_SystemParameterProcudure_Result> sp_SystemParameterProcudure(string sp_Name)
        {
            var sp_NameParameter = sp_Name != null ?
                new ObjectParameter("Sp_Name", sp_Name) :
                new ObjectParameter("Sp_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SystemParameterProcudure_Result>("sp_SystemParameterProcudure", sp_NameParameter);
        }
    
        public virtual ObjectResult<sp_SystemTableCOLUMN_Result> sp_SystemTableCOLUMN(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SystemTableCOLUMN_Result>("sp_SystemTableCOLUMN", tableNameParameter);
        }
    
        public virtual ObjectResult<sp_TableCOLUMN_Result> sp_TableCOLUMN(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TableCOLUMN_Result>("sp_TableCOLUMN", tableNameParameter);
        }
    
        public virtual ObjectResult<sp_UserProfile_Select_Result> sp_UserProfile_Select(string lang, string userName, string userID, Nullable<int> iD, Nullable<int> companyID, string name, string family, Nullable<int> roleID, string mobile, string tokenID, string email, string nationalCode, Nullable<bool> isDefaultCompany)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var familyParameter = family != null ?
                new ObjectParameter("Family", family) :
                new ObjectParameter("Family", typeof(string));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var tokenIDParameter = tokenID != null ?
                new ObjectParameter("TokenID", tokenID) :
                new ObjectParameter("TokenID", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var nationalCodeParameter = nationalCode != null ?
                new ObjectParameter("NationalCode", nationalCode) :
                new ObjectParameter("NationalCode", typeof(string));
    
            var isDefaultCompanyParameter = isDefaultCompany.HasValue ?
                new ObjectParameter("IsDefaultCompany", isDefaultCompany) :
                new ObjectParameter("IsDefaultCompany", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserProfile_Select_Result>("sp_UserProfile_Select", langParameter, userNameParameter, userIDParameter, iDParameter, companyIDParameter, nameParameter, familyParameter, roleIDParameter, mobileParameter, tokenIDParameter, emailParameter, nationalCodeParameter, isDefaultCompanyParameter);
        }
    
        public virtual ObjectResult<sp_UserRole_Select_Result> sp_UserRole_Select(string lang, string userName, Nullable<int> iD, string roleName, Nullable<int> parentLangID, Nullable<bool> active)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var parentLangIDParameter = parentLangID.HasValue ?
                new ObjectParameter("ParentLangID", parentLangID) :
                new ObjectParameter("ParentLangID", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserRole_Select_Result>("sp_UserRole_Select", langParameter, userNameParameter, iDParameter, roleNameParameter, parentLangIDParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_UserSubMenu_Select_Result> sp_UserSubMenu_Select(string lang, string userName, Nullable<int> iD, Nullable<int> companyID, string title, string controlID, Nullable<bool> active, Nullable<bool> isShow)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var controlIDParameter = controlID != null ?
                new ObjectParameter("ControlID", controlID) :
                new ObjectParameter("ControlID", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var isShowParameter = isShow.HasValue ?
                new ObjectParameter("IsShow", isShow) :
                new ObjectParameter("IsShow", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserSubMenu_Select_Result>("sp_UserSubMenu_Select", langParameter, userNameParameter, iDParameter, companyIDParameter, titleParameter, controlIDParameter, activeParameter, isShowParameter);
        }
    
        public virtual ObjectResult<sp_BasicDate_Select_Result> sp_BasicDate_Select(string lang, string loguser, string logIP, string groupType)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var loguserParameter = loguser != null ?
                new ObjectParameter("Loguser", loguser) :
                new ObjectParameter("Loguser", typeof(string));
    
            var logIPParameter = logIP != null ?
                new ObjectParameter("LogIP", logIP) :
                new ObjectParameter("LogIP", typeof(string));
    
            var groupTypeParameter = groupType != null ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BasicDate_Select_Result>("sp_BasicDate_Select", langParameter, loguserParameter, logIPParameter, groupTypeParameter);
        }
    
        public virtual ObjectResult<sp_BaseData_Select_Result> sp_BaseData_Select(string lang, string userName, Nullable<int> iD, string groupType, string title, string codeChar, Nullable<int> codeINT)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var groupTypeParameter = groupType != null ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var codeCharParameter = codeChar != null ?
                new ObjectParameter("CodeChar", codeChar) :
                new ObjectParameter("CodeChar", typeof(string));
    
            var codeINTParameter = codeINT.HasValue ?
                new ObjectParameter("CodeINT", codeINT) :
                new ObjectParameter("CodeINT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_BaseData_Select_Result>("sp_BaseData_Select", langParameter, userNameParameter, iDParameter, groupTypeParameter, titleParameter, codeCharParameter, codeINTParameter);
        }
    
        public virtual ObjectResult<sp_ProductGroupDetail_GroupBy_Select_Result> sp_ProductGroupDetail_GroupBy_Select(string userName, string lang)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductGroupDetail_GroupBy_Select_Result>("sp_ProductGroupDetail_GroupBy_Select", userNameParameter, langParameter);
        }
    
        public virtual ObjectResult<sp_ProductGroup_Select_Result> sp_ProductGroup_Select(string userName, string lang, Nullable<int> iD, Nullable<int> parentID, string parent_Title, string child_Title, Nullable<bool> isLastChid)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            var parent_TitleParameter = parent_Title != null ?
                new ObjectParameter("parent_Title", parent_Title) :
                new ObjectParameter("parent_Title", typeof(string));
    
            var child_TitleParameter = child_Title != null ?
                new ObjectParameter("child_Title", child_Title) :
                new ObjectParameter("child_Title", typeof(string));
    
            var isLastChidParameter = isLastChid.HasValue ?
                new ObjectParameter("IsLastChid", isLastChid) :
                new ObjectParameter("IsLastChid", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductGroup_Select_Result>("sp_ProductGroup_Select", userNameParameter, langParameter, iDParameter, parentIDParameter, parent_TitleParameter, child_TitleParameter, isLastChidParameter);
        }
    
        public virtual ObjectResult<sp_CompanyProductGroup_Select_Result> sp_CompanyProductGroup_Select(Nullable<int> companyID, string lang)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CompanyProductGroup_Select_Result>("sp_CompanyProductGroup_Select", companyIDParameter, langParameter);
        }
    
        public virtual ObjectResult<ProductGroup_SelectRecursives_Result> ProductGroup_SelectRecursives(string lang, string userName, Nullable<int> productGroupID)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductGroup_SelectRecursives_Result>("ProductGroup_SelectRecursives", langParameter, userNameParameter, productGroupIDParameter);
        }
    
        public virtual ObjectResult<sp_CompanySettings_Select_Result> sp_CompanySettings_Select(string lang, string userName, Nullable<int> companyID, string category)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CompanySettings_Select_Result>("sp_CompanySettings_Select", langParameter, userNameParameter, companyIDParameter, categoryParameter);
        }
    
        public virtual ObjectResult<sp_UserMenu_Select_Result> sp_UserMenu_Select(string lang, string userName, Nullable<int> iD, Nullable<int> companyID, string title, Nullable<bool> active, Nullable<bool> isShow)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var isShowParameter = isShow.HasValue ?
                new ObjectParameter("IsShow", isShow) :
                new ObjectParameter("IsShow", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserMenu_Select_Result>("sp_UserMenu_Select", langParameter, userNameParameter, iDParameter, companyIDParameter, titleParameter, activeParameter, isShowParameter);
        }
    
        public virtual ObjectResult<sp_VisitedHistory_GroupBy_Select_Result> sp_VisitedHistory_GroupBy_Select(Nullable<System.DateTime> fromTime, Nullable<System.DateTime> toDate, Nullable<int> companyID)
        {
            var fromTimeParameter = fromTime.HasValue ?
                new ObjectParameter("FromTime", fromTime) :
                new ObjectParameter("FromTime", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VisitedHistory_GroupBy_Select_Result>("sp_VisitedHistory_GroupBy_Select", fromTimeParameter, toDateParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_PageGenerator_Select_Result> sp_PageGenerator_Select(string lang, string logUser, Nullable<int> iD, Nullable<int> companyID, Nullable<int> pageLocationID, string content, Nullable<bool> active)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var logUserParameter = logUser != null ?
                new ObjectParameter("LogUser", logUser) :
                new ObjectParameter("LogUser", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var pageLocationIDParameter = pageLocationID.HasValue ?
                new ObjectParameter("PageLocationID", pageLocationID) :
                new ObjectParameter("PageLocationID", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PageGenerator_Select_Result>("sp_PageGenerator_Select", langParameter, logUserParameter, iDParameter, companyIDParameter, pageLocationIDParameter, contentParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_PageMenu_Select_Result> sp_PageMenu_Select(string lang, string userName, Nullable<int> companyID)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PageMenu_Select_Result>("sp_PageMenu_Select", langParameter, userNameParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_ProductUserComment_Select_Result> sp_ProductUserComment_Select(string lang, string loguser, string logIP, Nullable<int> productID, Nullable<int> companyID, Nullable<bool> active)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var loguserParameter = loguser != null ?
                new ObjectParameter("Loguser", loguser) :
                new ObjectParameter("Loguser", typeof(string));
    
            var logIPParameter = logIP != null ?
                new ObjectParameter("LogIP", logIP) :
                new ObjectParameter("LogIP", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductUserComment_Select_Result>("sp_ProductUserComment_Select", langParameter, loguserParameter, logIPParameter, productIDParameter, companyIDParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_UserProfile_Login_Result> sp_UserProfile_Login(string lang, string userName, string password)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserProfile_Login_Result>("sp_UserProfile_Login", langParameter, userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<sp_ProductSpecification_Select_Result> sp_ProductSpecification_Select(string lang, string userName, Nullable<int> iD, string title, Nullable<int> groupType, Nullable<int> companyID, string groupTypeName)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var groupTypeParameter = groupType.HasValue ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var groupTypeNameParameter = groupTypeName != null ?
                new ObjectParameter("GroupTypeName", groupTypeName) :
                new ObjectParameter("GroupTypeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductSpecification_Select_Result>("sp_ProductSpecification_Select", langParameter, userNameParameter, iDParameter, titleParameter, groupTypeParameter, companyIDParameter, groupTypeNameParameter);
        }
    
        public virtual ObjectResult<sp_ProductDetail_Specification_Select_Result> sp_ProductDetail_Specification_Select(string lang, string loguser, Nullable<int> productID)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var loguserParameter = loguser != null ?
                new ObjectParameter("Loguser", loguser) :
                new ObjectParameter("Loguser", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductDetail_Specification_Select_Result>("sp_ProductDetail_Specification_Select", langParameter, loguserParameter, productIDParameter);
        }
    
        public virtual ObjectResult<sp_UserAcessMenu_Select_Result> sp_UserAcessMenu_Select(string lang, string userID, Nullable<int> roleID, string controlID, Nullable<bool> active, Nullable<bool> isShow)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var controlIDParameter = controlID != null ?
                new ObjectParameter("ControlID", controlID) :
                new ObjectParameter("ControlID", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var isShowParameter = isShow.HasValue ?
                new ObjectParameter("IsShow", isShow) :
                new ObjectParameter("IsShow", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserAcessMenu_Select_Result>("sp_UserAcessMenu_Select", langParameter, userIDParameter, roleIDParameter, controlIDParameter, activeParameter, isShowParameter);
        }
    
        public virtual ObjectResult<sp_UserNotAcessMenu_Select_Result> sp_UserNotAcessMenu_Select(string lang, string userID, Nullable<int> roleID, string controlID, Nullable<bool> active, Nullable<bool> isShow)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var controlIDParameter = controlID != null ?
                new ObjectParameter("ControlID", controlID) :
                new ObjectParameter("ControlID", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var isShowParameter = isShow.HasValue ?
                new ObjectParameter("IsShow", isShow) :
                new ObjectParameter("IsShow", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_UserNotAcessMenu_Select_Result>("sp_UserNotAcessMenu_Select", langParameter, userIDParameter, roleIDParameter, controlIDParameter, activeParameter, isShowParameter);
        }
    
        public virtual ObjectResult<sp_Company_Select_Result> sp_Company_Select(string lang, string userName, string iP, Nullable<int> iD, Nullable<int> countryID_BasicData, Nullable<int> cityID_BasicData, string companyName, Nullable<bool> isDefaultCompany, Nullable<int> companyGroupID_BaseData, string websiteUrl)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var countryID_BasicDataParameter = countryID_BasicData.HasValue ?
                new ObjectParameter("CountryID_BasicData", countryID_BasicData) :
                new ObjectParameter("CountryID_BasicData", typeof(int));
    
            var cityID_BasicDataParameter = cityID_BasicData.HasValue ?
                new ObjectParameter("CityID_BasicData", cityID_BasicData) :
                new ObjectParameter("CityID_BasicData", typeof(int));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var isDefaultCompanyParameter = isDefaultCompany.HasValue ?
                new ObjectParameter("IsDefaultCompany", isDefaultCompany) :
                new ObjectParameter("IsDefaultCompany", typeof(bool));
    
            var companyGroupID_BaseDataParameter = companyGroupID_BaseData.HasValue ?
                new ObjectParameter("CompanyGroupID_BaseData", companyGroupID_BaseData) :
                new ObjectParameter("CompanyGroupID_BaseData", typeof(int));
    
            var websiteUrlParameter = websiteUrl != null ?
                new ObjectParameter("WebsiteUrl", websiteUrl) :
                new ObjectParameter("WebsiteUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Company_Select_Result>("sp_Company_Select", langParameter, userNameParameter, iPParameter, iDParameter, countryID_BasicDataParameter, cityID_BasicDataParameter, companyNameParameter, isDefaultCompanyParameter, companyGroupID_BaseDataParameter, websiteUrlParameter);
        }
    
        public virtual ObjectResult<sp_Payment_Select_Result> sp_Payment_Select(string lang, string userName, Nullable<int> iD, Nullable<int> companyID, Nullable<int> purchaseID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string fullName, Nullable<int> status)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var purchaseIDParameter = purchaseID.HasValue ?
                new ObjectParameter("PurchaseID", purchaseID) :
                new ObjectParameter("PurchaseID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Payment_Select_Result>("sp_Payment_Select", langParameter, userNameParameter, iDParameter, companyIDParameter, purchaseIDParameter, fromDateParameter, toDateParameter, fullNameParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_Customer_Select_Result> sp_Customer_Select(string lang, string userName, Nullable<int> iD, Nullable<int> companyID, string mobile, string email, string fullName, string codeMelli)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var codeMelliParameter = codeMelli != null ?
                new ObjectParameter("CodeMelli", codeMelli) :
                new ObjectParameter("CodeMelli", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Customer_Select_Result>("sp_Customer_Select", langParameter, userNameParameter, iDParameter, companyIDParameter, mobileParameter, emailParameter, fullNameParameter, codeMelliParameter);
        }
    
        public virtual ObjectResult<sp_Purchase_Select_Result> sp_Purchase_Select(string lang, string userName, Nullable<int> iD, Nullable<int> companyID, Nullable<int> customerID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string fullName, Nullable<int> status)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Purchase_Select_Result>("sp_Purchase_Select", langParameter, userNameParameter, iDParameter, companyIDParameter, customerIDParameter, fromDateParameter, toDateParameter, fullNameParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_ProductDatail_Select_Result> sp_ProductDatail_Select(string lang, string loguser, string logIP, Nullable<int> productGroupID, Nullable<bool> isShowSearch)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var loguserParameter = loguser != null ?
                new ObjectParameter("Loguser", loguser) :
                new ObjectParameter("Loguser", typeof(string));
    
            var logIPParameter = logIP != null ?
                new ObjectParameter("LogIP", logIP) :
                new ObjectParameter("LogIP", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var isShowSearchParameter = isShowSearch.HasValue ?
                new ObjectParameter("IsShowSearch", isShowSearch) :
                new ObjectParameter("IsShowSearch", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductDatail_Select_Result>("sp_ProductDatail_Select", langParameter, loguserParameter, logIPParameter, productGroupIDParameter, isShowSearchParameter);
        }
    
        public virtual ObjectResult<sp_Product_Select_Result> sp_Product_Select(string lang, string loguser, string logIP, Nullable<bool> isSpecialSales, Nullable<bool> isNewCreate, Nullable<int> productGroupID, Nullable<int> productID, Nullable<int> companyID, string stringParamGroupType, string stringParamGroupName, Nullable<int> pageNumber, string orderByColumn, Nullable<int> orderDirection, Nullable<int> availableCount)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var loguserParameter = loguser != null ?
                new ObjectParameter("Loguser", loguser) :
                new ObjectParameter("Loguser", typeof(string));
    
            var logIPParameter = logIP != null ?
                new ObjectParameter("LogIP", logIP) :
                new ObjectParameter("LogIP", typeof(string));
    
            var isSpecialSalesParameter = isSpecialSales.HasValue ?
                new ObjectParameter("IsSpecialSales", isSpecialSales) :
                new ObjectParameter("IsSpecialSales", typeof(bool));
    
            var isNewCreateParameter = isNewCreate.HasValue ?
                new ObjectParameter("IsNewCreate", isNewCreate) :
                new ObjectParameter("IsNewCreate", typeof(bool));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var stringParamGroupTypeParameter = stringParamGroupType != null ?
                new ObjectParameter("StringParamGroupType", stringParamGroupType) :
                new ObjectParameter("StringParamGroupType", typeof(string));
    
            var stringParamGroupNameParameter = stringParamGroupName != null ?
                new ObjectParameter("StringParamGroupName", stringParamGroupName) :
                new ObjectParameter("StringParamGroupName", typeof(string));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var orderByColumnParameter = orderByColumn != null ?
                new ObjectParameter("OrderByColumn", orderByColumn) :
                new ObjectParameter("OrderByColumn", typeof(string));
    
            var orderDirectionParameter = orderDirection.HasValue ?
                new ObjectParameter("OrderDirection", orderDirection) :
                new ObjectParameter("OrderDirection", typeof(int));
    
            var availableCountParameter = availableCount.HasValue ?
                new ObjectParameter("AvailableCount", availableCount) :
                new ObjectParameter("AvailableCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_Select_Result>("sp_Product_Select", langParameter, loguserParameter, logIPParameter, isSpecialSalesParameter, isNewCreateParameter, productGroupIDParameter, productIDParameter, companyIDParameter, stringParamGroupTypeParameter, stringParamGroupNameParameter, pageNumberParameter, orderByColumnParameter, orderDirectionParameter, availableCountParameter);
        }
    
        public virtual ObjectResult<sp_ProductSameSearch_Result> sp_ProductSameSearch(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductSameSearch_Result>("sp_ProductSameSearch", productIDParameter);
        }
    
        public virtual ObjectResult<sp_Product_Select_Torob_Result> sp_Product_Select_Torob(string lang, string loguser, string logIP, Nullable<int> productGroupID, Nullable<int> productID, Nullable<int> companyID, Nullable<int> pageNumber, string url)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var loguserParameter = loguser != null ?
                new ObjectParameter("Loguser", loguser) :
                new ObjectParameter("Loguser", typeof(string));
    
            var logIPParameter = logIP != null ?
                new ObjectParameter("LogIP", logIP) :
                new ObjectParameter("LogIP", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_Select_Torob_Result>("sp_Product_Select_Torob", langParameter, loguserParameter, logIPParameter, productGroupIDParameter, productIDParameter, companyIDParameter, pageNumberParameter, urlParameter);
        }
    
        public virtual ObjectResult<sp_ProductGroupDetail_Select_Result> sp_ProductGroupDetail_Select(string userName, string lang, Nullable<int> iD, Nullable<int> productGroupID, Nullable<int> companyID)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProductGroupDetail_Select_Result>("sp_ProductGroupDetail_Select", userNameParameter, langParameter, iDParameter, productGroupIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<sp_CompanyTransportation_Select_Result> sp_CompanyTransportation_Select(string lang, string userName, Nullable<int> companyID, Nullable<int> transportationCalculate_BasicData, Nullable<int> iD)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var transportationCalculate_BasicDataParameter = transportationCalculate_BasicData.HasValue ?
                new ObjectParameter("TransportationCalculate_BasicData", transportationCalculate_BasicData) :
                new ObjectParameter("TransportationCalculate_BasicData", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CompanyTransportation_Select_Result>("sp_CompanyTransportation_Select", langParameter, userNameParameter, companyIDParameter, transportationCalculate_BasicDataParameter, iDParameter);
        }
    
        public virtual ObjectResult<sp_Product_Panel_Select_Result> sp_Product_Panel_Select(string lang, string userName, Nullable<int> iD, Nullable<int> companyID, Nullable<int> productGroupID, string barCode, string name, Nullable<bool> isAvailable, Nullable<bool> acive, Nullable<bool> isViewTelegram, Nullable<bool> isViewInstagram, Nullable<bool> isSendInstagram, Nullable<bool> isSendTelegram, Nullable<bool> isSpecialSales, string specification)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var barCodeParameter = barCode != null ?
                new ObjectParameter("BarCode", barCode) :
                new ObjectParameter("BarCode", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var isAvailableParameter = isAvailable.HasValue ?
                new ObjectParameter("IsAvailable", isAvailable) :
                new ObjectParameter("IsAvailable", typeof(bool));
    
            var aciveParameter = acive.HasValue ?
                new ObjectParameter("Acive", acive) :
                new ObjectParameter("Acive", typeof(bool));
    
            var isViewTelegramParameter = isViewTelegram.HasValue ?
                new ObjectParameter("IsViewTelegram", isViewTelegram) :
                new ObjectParameter("IsViewTelegram", typeof(bool));
    
            var isViewInstagramParameter = isViewInstagram.HasValue ?
                new ObjectParameter("IsViewInstagram", isViewInstagram) :
                new ObjectParameter("IsViewInstagram", typeof(bool));
    
            var isSendInstagramParameter = isSendInstagram.HasValue ?
                new ObjectParameter("IsSendInstagram", isSendInstagram) :
                new ObjectParameter("IsSendInstagram", typeof(bool));
    
            var isSendTelegramParameter = isSendTelegram.HasValue ?
                new ObjectParameter("IsSendTelegram", isSendTelegram) :
                new ObjectParameter("IsSendTelegram", typeof(bool));
    
            var isSpecialSalesParameter = isSpecialSales.HasValue ?
                new ObjectParameter("IsSpecialSales", isSpecialSales) :
                new ObjectParameter("IsSpecialSales", typeof(bool));
    
            var specificationParameter = specification != null ?
                new ObjectParameter("Specification", specification) :
                new ObjectParameter("Specification", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_Panel_Select_Result>("sp_Product_Panel_Select", langParameter, userNameParameter, iDParameter, companyIDParameter, productGroupIDParameter, barCodeParameter, nameParameter, isAvailableParameter, aciveParameter, isViewTelegramParameter, isViewInstagramParameter, isSendInstagramParameter, isSendTelegramParameter, isSpecialSalesParameter, specificationParameter);
        }
    
        public virtual ObjectResult<sp_Product_Select_Elmaz_Result> sp_Product_Select_Elmaz(string lang, string logIP, Nullable<int> productGroupID, Nullable<int> productID, Nullable<int> companyID)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var logIPParameter = logIP != null ?
                new ObjectParameter("LogIP", logIP) :
                new ObjectParameter("LogIP", typeof(string));
    
            var productGroupIDParameter = productGroupID.HasValue ?
                new ObjectParameter("ProductGroupID", productGroupID) :
                new ObjectParameter("ProductGroupID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_Select_Elmaz_Result>("sp_Product_Select_Elmaz", langParameter, logIPParameter, productGroupIDParameter, productIDParameter, companyIDParameter);
        }
    }
}
