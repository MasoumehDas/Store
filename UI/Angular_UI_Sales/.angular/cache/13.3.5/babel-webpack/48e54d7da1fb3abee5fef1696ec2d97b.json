{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\n\nclass AlertForm {}\n\nclass PagSizeInvaite {}\n\nexport let them = /*#__PURE__*/(() => {\n  class them {\n    constructor() {\n      this.modal_open_edit = false;\n      this.AdvanceSearch = false;\n      this.modal_open_delete = false;\n      this.modal_open_new = false;\n      this.modal_open_settings = false;\n      this.modal_open_Alert = false;\n      this.isVisible = true;\n      this.selectRow = false;\n      this.isMinSize = false;\n      this.loading = false;\n      this.cssUrl1 = \"\";\n      this.cssUrl2 = \"\";\n      this.DefaultLanguage = 'fa';\n      this.TotalShopping = '';\n      this.ProductGroup = '';\n      this.ProductGroupForFirst = '';\n      this.ProductGroupName = '';\n      this.ProductGroupNameForFirst = '';\n      this.configUrlBasic = environment.configUrlBasic;\n      this.configUrlBasicImage = environment.configUrlBasicImage;\n      this.ShowReportUrlBasic = environment.ShowReportUrlBasic;\n      this.ShowCkEditorUrlBasic = environment.ShowCkEditorUrlBasic;\n      this.configUrlPanel = environment.configUrlPanel; //-------------------خصوصیات ظاهری صفحه--------------------\n\n      this.BackgroundImageUrl = '/assets/image/home.jpg';\n      this.LogoUrl = '/assets/image/logo.jpg';\n      this.HeaderColor = '#1e1332';\n      this.ButtonColor = '#adc867';\n      this.HeaderFontColor = '#ffffff';\n      this.ButtonFontColor = '#ffffff';\n      this.PriceColor = '#ff006c';\n      this.PriceFontColor = '#ffffff'; //----------------------------------------------------------\n\n      this.PageSize = 20;\n      this.Page = 1;\n      this.PagSizeInvaite = [20, 20, 30, 50]; //----------------------------------------------------------\n\n      this.AlertLis = {\n        Title: '',\n        Body: '',\n        Buttom: ''\n      };\n      this.Lang = localStorage.getItem('language');\n      this.CompanyName = localStorage.getItem('CompanyName');\n      this.CompanyID = localStorage.getItem('CompanyID');\n      this.PageNumber = '1';\n      this.selectedAny = false; //Checkbox dont selected all\n\n      this.currentPercent = 0;\n      this.op = 1;\n      this.body = '';\n\n      if (this.Lang == null || this.Lang == undefined) {\n        this.Lang = 'fa';\n      }\n\n      if (!(window.location.host.includes('localhost:4300') || window.location.host.includes('localhost:4700')) && window.location.host.includes('localhost')) {\n        this.configUrlBasic = environment.configUrlBasic_Local;\n        this.configUrlBasicImage = environment.configUrlBasicImage_Local;\n        this.ShowReportUrlBasic = environment.ShowReportUrlBasic_Local;\n        this.ShowCkEditorUrlBasic = environment.ShowCkEditorUrlLocal;\n        this.SiteStause = 2;\n      } else {\n        this.configUrlBasic = environment.configUrlBasic;\n        this.configUrlBasicImage = environment.configUrlBasicImage;\n        this.ShowReportUrlBasic = environment.ShowReportUrlBasic;\n        this.ShowCkEditorUrlBasic = environment.ShowCkEditorUrlBasic;\n        this.SiteStause = 1;\n      }\n    }\n\n    selectAll(Lists) {\n      Lists.subscribe(lists => {\n        lists.forEach(a => {\n          a.checked = this.selectedAll;\n        });\n\n        if (this.selectedAll == true) {\n          this.selectedAny = false;\n        } else if (this.selectedAll == false && this.selectedAny == true) {\n          this.selectedAny = false;\n        }\n      });\n    } //*******************************************************\n\n\n    SetLanguage() {\n      if (this.Lang == null) {\n        this.Lang = this.DefaultLanguage;\n      }\n    }\n\n    onclickBackground() {\n      this.modal_open_edit = false;\n      this.modal_open_new = false;\n    }\n\n    onclickMinSizeModal() {\n      this.isMinSize = !this.isMinSize;\n    }\n\n    NewOpen() {\n      this.modal_open_new = true;\n    }\n\n    DeleteConfirm(selectedRowID) {\n      if (this.selectRow == false) {\n        this.SeupAlert(null, 'alert-warning');\n        this.ShowAlert('alert-warning');\n      } else {\n        this.modal_open_delete = true;\n      }\n    }\n\n    DeleteRowConfirm(selectedRowID) {\n      this.modal_open_delete = true;\n      this.selectRow == true;\n      this.selectedRowID = selectedRowID;\n    }\n\n    SelectRow(postId, checked) {\n      if (checked == true) {\n        this.selectRow = true;\n      } else {\n        this.selectRow = false;\n      }\n\n      if (this.selectedAll == true && checked == false) {\n        this.selectedAny = true;\n      } else {\n        this.selectedAny = false;\n      }\n\n      this.selectedRowID = postId;\n    }\n\n    onResetPage(formControl) {\n      formControl.reset();\n    }\n\n    ShowAlert(alertID) {\n      this.currentPercent++;\n      console.log('currentPercent');\n      console.log(this.currentPercent++);\n\n      if (this.currentPercent >= 50) {\n        document.getElementById(alertID).style.opacity = \"0\";\n        document.getElementById(alertID).style.display = \"none\";\n        clearTimeout(this.id);\n      } else if (this.currentPercent % 5 == 0 || this.currentPercent == 0) {\n        console.log('currentPercent++');\n        console.log(this.currentPercent++);\n        this.op = Number(this.op) - Number(0.1);\n        document.getElementById(alertID).style.opacity = this.op.toString();\n      }\n\n      if (this.currentPercent < 50) {\n        this.id = setTimeout(() => {\n          this.ShowAlert(alertID);\n        }, 150);\n      }\n    }\n\n    SeupAlert(AlertLis, alertID) {\n      document.getElementById(alertID).style.opacity = \"1\";\n      document.getElementById(alertID).style.display = \"block\";\n      this.body = '';\n\n      if (AlertLis != null) {\n        this.body = \"<div class='toast-header' >\" + AlertLis.Title + \"</div>\" + \"<div class='toast-body' >\" + AlertLis.Body + \"</div > \";\n        document.getElementById(alertID).innerHTML = this.body;\n      }\n\n      this.currentPercent = 0;\n      this.op = 1;\n      clearTimeout(this.id);\n    }\n\n    ToDate(dob) {\n      if (dob) {\n        dob = dob.replace('/', '-').replace('/', '-');\n        const [year, month, day] = dob.split('-');\n        this.DateEvent = {\n          year: parseInt(year),\n          month: parseInt(month),\n          day: parseInt(day.split(' ')[0].trim())\n        };\n        return this.DateEvent;\n      }\n    }\n\n    CheckImageSize(file, MaxVal = 300) {\n      var max = Number(MaxVal) * 1024;\n\n      if (file.size > max) {\n        if (this.Lang.toLowerCase() == 'fa') {\n          this.AlertLis.Title = 'خطا';\n          this.AlertLis.Body = 'حداکثر حجم مجاز ' + MaxVal.toString() + ' کیلو بایت';\n        } else {\n          this.AlertLis.Title = 'Error';\n          this.AlertLis.Body = 'The maximum allowable volume is ' + MaxVal.toString() + ' KB';\n        }\n\n        this.SeupAlert(this.AlertLis, 'alert-warning');\n        this.ShowAlert('alert-warning');\n        return false;\n      } else {\n        return true;\n      }\n    } //------------------------تطابق اسم ها با هم -------------------\n\n\n    Soundex(name) {\n      let s = [];\n      let si = 1;\n      let c; //              ABCDEFGHIJKLMNOPQRSTUVWXYZ\n\n      let mappings = \"01230120022455012623010202\";\n      s[0] = name[0].toUpperCase();\n\n      for (let i = 1, l = name.length; i < l; i++) {\n        c = name[i].toUpperCase().charCodeAt(0) - 65;\n\n        if (c >= 0 && c <= 25) {\n          if (mappings[c] != '0') {\n            if (mappings[c] != s[si - 1]) {\n              s[si] = mappings[c];\n              si++;\n            }\n\n            if (si > 3) {\n              break;\n            }\n          }\n        }\n      }\n\n      if (si <= 3) {\n        while (si <= 3) {\n          s[si] = '0';\n          si++;\n        }\n      }\n\n      return s.join(\"\");\n    }\n\n    playAudio() {\n      let audio = new Audio();\n      audio.src = \"../../../assets/audio/bright.mp3\";\n      audio.load();\n      audio.play();\n    }\n\n    formatDate(date) {\n      var d = new Date(date),\n          month = '' + (d.getMonth() + 1),\n          day = '' + d.getDate(),\n          year = d.getFullYear();\n      if (month.length < 2) month = '0' + month;\n      if (day.length < 2) day = '0' + day;\n      return [year, month, day].join('-');\n    }\n\n    gregorian_to_jalali(gy, gm, gd) {\n      var g_d_m, jy, jm, jd, gy2, days;\n      g_d_m = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n      gy2 = gm > 2 ? gy + 1 : gy;\n      days = 355666 + 365 * gy + ~~((gy2 + 3) / 4) - ~~((gy2 + 99) / 100) + ~~((gy2 + 399) / 400) + gd + g_d_m[gm - 1];\n      jy = -1595 + 33 * ~~(days / 12053);\n      days %= 12053;\n      jy += 4 * ~~(days / 1461);\n      days %= 1461;\n\n      if (days > 365) {\n        jy += ~~((days - 1) / 365);\n        days = (days - 1) % 365;\n      }\n\n      if (days < 186) {\n        jm = 1 + ~~(days / 31);\n        jd = 1 + days % 31;\n      } else {\n        jm = 7 + ~~((days - 186) / 30);\n        jd = 1 + (days - 186) % 30;\n      }\n\n      return jy + '-' + jm + '-' + jd;\n    }\n\n    jalali_to_gregorian(jy, jm, jd) {\n      var sal_a, gy, gm, gd, days;\n      jy += 1595;\n      days = -355668 + 365 * jy + ~~(jy / 33) * 8 + ~~((jy % 33 + 3) / 4) + jd + (jm < 7 ? (jm - 1) * 31 : (jm - 7) * 30 + 186);\n      gy = 400 * ~~(days / 146097);\n      days %= 146097;\n\n      if (days > 36524) {\n        gy += 100 * ~~(--days / 36524);\n        days %= 36524;\n        if (days >= 365) days++;\n      }\n\n      gy += 4 * ~~(days / 1461);\n      days %= 1461;\n\n      if (days > 365) {\n        gy += ~~((days - 1) / 365);\n        days = (days - 1) % 365;\n      }\n\n      gd = days + 1;\n      sal_a = [0, 31, gy % 4 === 0 && gy % 100 !== 0 || gy % 400 === 0 ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n      for (gm = 0; gm < 13 && gd > sal_a[gm]; gm++) gd -= sal_a[gm];\n\n      return [gy, gm, gd];\n    }\n\n  }\n\n  them.ɵfac = function them_Factory(t) {\n    return new (t || them)();\n  };\n\n  them.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: them,\n    factory: them.ɵfac\n  });\n  return them;\n})();","map":null,"metadata":{},"sourceType":"module"}