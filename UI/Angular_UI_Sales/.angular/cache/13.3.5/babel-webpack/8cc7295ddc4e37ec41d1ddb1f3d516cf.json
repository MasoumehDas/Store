{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/service/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../shared/service/themplate.service\";\nimport * as i4 from \"@angular/platform-browser\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(configService, router, them, titleService) {\n      this.configService = configService;\n      this.router = router;\n      this.them = them;\n      this.titleService = titleService;\n      this.Order = {\n        Address: '',\n        Description: '',\n        Email: '',\n        CodeMelli: '',\n        FullName: '',\n        Mobile: '',\n        Lang: '',\n        LogUser: '',\n        City: '',\n        Total: 0,\n        CustomerID: null,\n        TotalDiscount: 0,\n        CompanyID: this.them.CompanyID,\n        OrderDetails: []\n      };\n      this.Lang = localStorage.getItem('language');\n      this.UserName = '';\n      this.loading = false;\n      this.BasicDataALL = [];\n      this.ParamShowSearch = [];\n      this.ProductSeptioal = [];\n      this.ProductSearch = [];\n      this.ProductGroupBy = [];\n      this.ProductDetails = [];\n      this.BasicDataParam1 = [];\n      this.BasicDataParam2 = [];\n      this.BasicDataParam3 = [];\n      this.BasicDataParam4 = [];\n      this.BasicDataParam5 = [];\n      this.BasicDataParam6 = [];\n      this.basicDataParam1 = [];\n      this.basicDataParam2 = [];\n      this.basicDataParam3 = [];\n      this.basicDataParam4 = [];\n      this.basicDataParam5 = [];\n      this.ProductNew = [];\n      this.Product = [];\n      this.Param1Show = false;\n      this.Param1ID = null;\n      this.Param1 = \"\";\n      this.Param2Show = false;\n      this.Param2ID = null;\n      this.Param2 = \"\";\n      this.Param3Show = false;\n      this.Param3ID = null;\n      this.Param3 = \"\";\n      this.Param4Show = false;\n      this.Param4ID = null;\n      this.Param4 = \"\";\n      this.ShowEasySeachID = \"\";\n      this.Param5Show = false;\n      this.Param5ID = null;\n      this.Param5 = \"\";\n      this.ParamName = \"\";\n      this.CompanyProductGroup = [];\n      this.ProductUserComment = [];\n      this.PageGenerator_0 = [];\n      this.PageGenerator_1 = [];\n      this.PageGenerator_2 = [];\n      this.PageGenerator_3 = [];\n      this.PageGenerator_4 = [];\n      this.PageGenerator_5 = [];\n      this.PageGenerator_6 = [];\n      this.PageGenerator_7 = [];\n      this.Paggin = [];\n      this.oldCalssPaggingActive = 'a1';\n      this.MenuView = [];\n      this.messageSource = new BehaviorSubject(this.ParamName);\n      this.currentMessage = this.messageSource.asObservable();\n      this.ComboName = \"\";\n      this.PageInfo = '';\n      this.PageHeader = '';\n    }\n\n    changeMessage(ParamName) {\n      this.messageSource.next(ParamName);\n    }\n\n    onPaggingSelect(CompanyID, ProductGroupID) {\n      this.configService.Fetch_FilterPageCount(CompanyID, ProductGroupID).subscribe(data => {\n        this.Paggin = data;\n      });\n    }\n\n    onPCompanyProductGroup(Lang, CompanyID) {\n      this.configService.Fetch_FilterCompanyProductGroupGet(CompanyID, Lang).subscribe(data => {\n        this.CompanyProductGroup = data;\n      });\n\n      if (this.CompanyProductGroup.length > 0) {\n        this.them.ProductGroupForFirst = this.CompanyProductGroup[0].ID.toString();\n        alert(this.them.ProductGroupForFirst);\n      }\n    }\n\n    SearchProduct(ProductID, PageNumber, OrderByColumn, OrderDirection) {\n      this.ParamName = this.ParamNameString();\n      this.ProductSearch = [];\n      this.ProductSearch = this.OnFetchProductSelect(this.Lang, '', '', '', this.them.ProductGroup, ProductID, this.them.CompanyID, '', this.ParamName, null, PageNumber, OrderByColumn, OrderDirection);\n      return this.ProductSearch;\n    }\n\n    ParamNameString() {\n      if (this.Param1 === undefined) {\n        this.Param1 = '';\n      }\n\n      if (this.Param2 === undefined) {\n        this.Param2 = '';\n      }\n\n      if (this.Param3 === undefined) {\n        this.Param3 = '';\n      }\n\n      if (this.Param4 === undefined) {\n        this.Param4 = '';\n      }\n\n      if (this.Param5 === undefined) {\n        this.Param5 = '';\n      }\n\n      this.ParamName = this.Param1 + ',' + this.Param2 + ',' + this.Param3 + ',' + this.Param4 + ',' + this.Param5;\n      return this.ParamName;\n    }\n\n    SearchProductByParameter(Lag, IsSpecialSales, ProductGroupID, CompanyID, Param, PageNumber, OrderByColumn, OrderDirection) {\n      this.messageSource.next(Param);\n      this.ProductSearch = [];\n      this.ProductSearch = this.OnFetchProductSelect(Lag, '', '', IsSpecialSales, ProductGroupID, '', CompanyID, '', Param, null, PageNumber, OrderByColumn, OrderDirection);\n      return this.ProductSearch;\n    } //---------------------تغییر استایل دکمه های صفحه بندی\n\n\n    ChangeStylePaggingButton(paggingNumber) {\n      var element = document.getElementById('a' + paggingNumber);\n\n      if (element != undefined) {\n        element.style.backgroundColor = this.them.PriceColor;\n        element.style.color = this.them.PriceFontColor;\n\n        if ('a' + paggingNumber != this.oldCalssPaggingActive) {\n          var elementold = document.getElementById(this.oldCalssPaggingActive);\n          elementold.style.backgroundColor = 'unset';\n          elementold.style.color = 'unset';\n        }\n\n        this.oldCalssPaggingActive = 'a' + paggingNumber;\n      }\n    }\n\n    OnParamShowSearch(Lang, GroupType, WebSite) {\n      this.configService.FetchParamShowSearch(Lang, GroupType, WebSite).subscribe(data => {\n        this.ParamShowSearch = [];\n        data.map(item => {\n          return {\n            GroupTypeName: item.GroupTypeName,\n            ProductGroupID: Number(GroupType),\n            IsShowSearch: true,\n            IsShowEasySearch: item.IsShowEasySearch\n          };\n        }).forEach(item => this.ParamShowSearch.push(item));\n\n        if (data.length > 0) {\n          this.them.ProductGroup = data[0].ProductGroupID.toString();\n        }\n\n        this.configService.FetchProductSpecificationSelect(Lang, '', this.them.ProductGroup, '', this.them.CompanyID).subscribe(data => {\n          this.BasicDataALL = data;\n          this.BasicDataParam6 = [];\n          this.BaseDataFliterLoad(this.ParamShowSearch[0].GroupTypeName, 'Param1', this.BasicDataALL, this.ParamShowSearch[0].IsShowEasySearch);\n          this.basicDataParam1 = this.BasicDataParam1;\n          this.BaseDataFliterLoad(this.ParamShowSearch[1].GroupTypeName, 'Param2', this.BasicDataALL, this.ParamShowSearch[1].IsShowEasySearch);\n          this.basicDataParam2 = this.BasicDataParam2;\n          this.BaseDataFliterLoad(this.ParamShowSearch[2].GroupTypeName, 'Param3', this.BasicDataALL, this.ParamShowSearch[2].IsShowEasySearch);\n          this.basicDataParam3 = this.BasicDataParam3;\n          this.BaseDataFliterLoad(this.ParamShowSearch[3].GroupTypeName, 'Param4', this.BasicDataALL, this.ParamShowSearch[3].IsShowEasySearch);\n          this.basicDataParam4 = this.basicDataParam4;\n          this.BaseDataFliterLoad(this.ParamShowSearch[4].GroupTypeName, 'Param5', this.BasicDataALL, this.ParamShowSearch[4].IsShowEasySearch);\n          this.basicDataParam5 = this.BasicDataParam5;\n        });\n      });\n      return new Observable(observer => observer.next(this.ParamShowSearch));\n    }\n\n    OnParamShowSearchHomePage() {\n      this.OnParamShowSearch(this.Lang, null, window.location.host);\n    }\n\n    OnFetchProductSelect(Lang, loguser, logIP, isSpecialSales, productGroupID, productID, companyID, stringParamGroupType, stringParamGroupName, IsNewCreate, PageNumber, OrderByColumn, OrderDirection) {\n      let proc = [];\n      this.Product = [];\n      this.them.loading = false;\n      this.configService.FetchProductSelect(Lang, loguser, logIP, isSpecialSales, productGroupID, productID, companyID, stringParamGroupType, stringParamGroupName, IsNewCreate, PageNumber, OrderByColumn, OrderDirection).subscribe(data => {\n        proc = data;\n        proc.forEach(a => a.ProductDetails = []); //-----------------بدست آوردن یک نوع از هر محصول\n\n        for (let i in proc) {\n          let count = this.Product.filter(a => a.ID == proc[i].ID);\n\n          if (count.length == 0) {\n            let row = proc.find(a => a.ID == proc[i].ID);\n            this.Product.push(row);\n            let pdd = proc.filter(a => a.ID == proc[i].ID);\n\n            for (let j in pdd) {\n              let pd = {\n                Title: pdd[j].Title,\n                GroupTypeName: pdd[j].GroupTypeName\n              };\n\n              if (row.ProductDetails.filter(a => a.GroupTypeName == pdd[j].GroupTypeName).length > 0) {\n                let title = row.ProductDetails.find(a => a.GroupTypeName == pdd[j].GroupTypeName).Title;\n                row.ProductDetails.find(a => a.GroupTypeName == pdd[j].GroupTypeName).Title = title + ' , ' + pdd[j].Title;\n              } else {\n                row.ProductDetails.push(pd);\n              }\n            }\n          }\n        } //End For\n\n\n        let href = window.location.href; //---------------تغییر عنوان سایت----------------------------------------\n\n        if (!href.includes(\"home-page\")) {\n          if (this.Product.length > 0) {\n            this.titleService.setTitle(this.them.CompanyName + \"|\" + this.Product[0].ProductGroup_Title);\n          }\n\n          if (this.Product.length > 0 && productID != null) {\n            this.titleService.setTitle(this.them.CompanyName + \"|\" + this.Product[0].ProductGroup_Title + \"|\" + this.Product[0].Name);\n          }\n        }\n\n        if (Number(PageNumber) > 0) {\n          this.ChangeStylePaggingButton(Number(PageNumber));\n        }\n\n        this.them.loading = false;\n      }, err => {\n        this.them.loading = false; //...\n      });\n      return this.Product;\n    }\n\n    OnFetchProductSelectNew(Lang, loguser, logIP, isSpecialSales, productGroupID, productID, companyID, stringParamGroupType, stringParamGroupName, IsNewCreate, PageNumber, OrderByColumn, OrderDirection) {\n      let proc = [];\n      this.ProductNew = [];\n      this.ProductGroupBy = [];\n      this.them.loading = true;\n      this.configService.FetchProductSelect(Lang, loguser, logIP, isSpecialSales, productGroupID, productID, companyID, stringParamGroupType, stringParamGroupName, IsNewCreate, PageNumber, OrderByColumn, OrderDirection).subscribe(data => {\n        proc = data;\n        proc.forEach(a => a.ProductDetails = []); //-----------------بدست آوردن یک نوع از هر محصول\n\n        for (let i in proc) {\n          let count = this.ProductGroupBy.filter(a => a.ID == proc[i].ID);\n\n          if (count.length == 0) {\n            let row = proc.find(a => a.ID == proc[i].ID);\n            this.ProductGroupBy.push(row);\n            let pdd = proc.filter(a => a.ID == proc[i].ID);\n\n            for (let j in pdd) {\n              let pd = {\n                Title: pdd[j].Title,\n                GroupTypeName: pdd[j].GroupTypeName\n              };\n              row.ProductDetails.push(pd);\n            }\n          }\n        }\n\n        this.ProductNew = proc;\n        this.them.loading = false;\n      }, err => {\n        this.them.loading = false; //...\n      });\n      return this.ProductGroupBy;\n    }\n\n    ShowListParam1() {\n      this.Param1Show = !this.Param1Show;\n      this.Param2Show = false;\n      this.Param3Show = false;\n      this.Param4Show = false;\n      this.Param5Show = false;\n    }\n\n    ShowListParam2() {\n      this.Param2Show = !this.Param2Show;\n      this.Param1Show = false;\n      this.Param3Show = false;\n      this.Param4Show = false;\n      this.Param5Show = false;\n    }\n\n    ShowListParam3() {\n      this.Param3Show = !this.Param3Show;\n      this.Param2Show = false;\n      this.Param1Show = false;\n      this.Param4Show = false;\n      this.Param5Show = false;\n    }\n\n    ShowListParam4() {\n      this.Param4Show = !this.Param4Show;\n      this.Param2Show = false;\n      this.Param3Show = false;\n      this.Param1Show = false;\n      this.Param5Show = false;\n    }\n\n    ShowListParam5() {\n      this.Param5Show = !this.Param5Show;\n      this.Param2Show = false;\n      this.Param3Show = false;\n      this.Param4Show = false;\n      this.Param1Show = false;\n    }\n\n    DataParam1Select(id, text) {\n      this.Param1Show = false;\n      this.Param1 = text;\n      this.Param1ID = id;\n      document.getElementById('span1').style.display = 'block';\n    }\n\n    ParamClose(id, param) {\n      document.getElementById(id).style.display = 'none';\n\n      if (param == 'Param1') {\n        this.Param1 = '';\n        this.Param1ID = null;\n      }\n\n      if (param == 'Param2') {\n        this.Param2 = '';\n        this.Param2ID = null;\n      }\n\n      if (param == 'Param3') {\n        this.Param3 = '';\n        this.Param3ID = null;\n      }\n\n      if (param == 'Param4') {\n        this.Param4 = '';\n        this.Param4ID = null;\n      }\n\n      if (param == 'Param5') {\n        this.Param5 = '';\n        this.Param4ID = null;\n      }\n    }\n\n    DataParam2Select(id, text) {\n      this.Param2Show = false;\n      this.Param2 = text;\n      this.Param2ID = id;\n      document.getElementById('span2').style.display = 'block';\n    }\n\n    DataParam3Select(id, text) {\n      this.Param3Show = false;\n      this.Param3 = text;\n      this.Param3ID = id;\n      document.getElementById('span3').style.display = 'block';\n    }\n\n    DataParam4Select(id, text) {\n      this.Param4Show = false;\n      this.Param4 = text;\n      this.Param4ID = id;\n      document.getElementById('span4').style.display = 'block';\n    }\n\n    DataParam5Select(id, text) {\n      this.Param5Show = false;\n      this.Param5 = text;\n      this.Param5ID = id;\n      document.getElementById('span5').style.display = 'block';\n    }\n\n    DataParam6Select(id, text, Param) {\n      if (Param == \"Param1\") {\n        this.Param1 = text;\n        this.Param1ID = id;\n        document.getElementById('span1').style.display = 'block';\n      }\n\n      if (Param == \"Param2\") {\n        this.Param2 = text;\n        this.Param2ID = id;\n        document.getElementById('span2').style.display = 'block';\n      }\n\n      if (Param == \"Param3\") {\n        this.Param3 = text;\n        this.Param3ID = id;\n        document.getElementById('span3').style.display = 'block';\n      }\n\n      if (Param == \"Param4\") {\n        this.Param4 = text;\n        this.Param4ID = id;\n        document.getElementById('span4').style.display = 'block';\n      }\n\n      if (Param == \"Param5\") {\n        this.Param5 = text;\n        this.Param5ID = id;\n        document.getElementById('span5').style.display = 'block';\n      }\n\n      document.getElementById(\"search_button\").click();\n    }\n\n    BasicDataFilter(event) {\n      let fillter = event.target.value;\n      let ComboName = event.target.id;\n\n      if (ComboName === \"Param2\") {\n        this.Param2Show = true;\n        this.Param1Show = false;\n        this.Param3Show = false;\n        this.Param4Show = false;\n        this.Param5Show = false;\n        this.basicDataParam2 = this.BasicDataParam2.filter(it => {\n          return it.Title.toLowerCase().includes(fillter);\n        });\n      }\n\n      if (ComboName === \"Param1\") {\n        this.Param1Show = true;\n        this.Param2Show = false;\n        this.Param3Show = false;\n        this.Param4Show = false;\n        this.Param5Show = false;\n        this.basicDataParam1 = this.BasicDataParam1.filter(it => {\n          return it.Title.toLowerCase().includes(fillter);\n        });\n      }\n\n      if (ComboName === \"Param3\") {\n        this.Param3Show = true;\n        this.Param1Show = false;\n        this.Param2Show = false;\n        this.Param4Show = false;\n        this.Param5Show = false;\n        this.basicDataParam3 = this.BasicDataParam3.filter(it => {\n          return it.Title.toLowerCase().includes(fillter);\n        });\n      }\n\n      if (ComboName === \"Param4\") {\n        this.Param4Show = true;\n        this.Param3Show = false;\n        this.Param1Show = false;\n        this.Param2Show = false;\n        this.Param5Show = false;\n        this.basicDataParam4 = this.BasicDataParam4.filter(it => {\n          return it.Title.toLowerCase().includes(fillter);\n        });\n      }\n\n      if (ComboName === \"Param5\") {\n        this.Param5Show = true;\n        this.Param4Show = false;\n        this.Param3Show = false;\n        this.Param1Show = false;\n        this.Param2Show = false;\n        this.basicDataParam5 = this.BasicDataParam5.filter(it => {\n          return it.Title.toLowerCase().includes(fillter);\n        });\n      }\n    }\n\n    BaseDataFliterLoad(ComboName, Param, BasicDataALL, isshowEasySearch) {\n      if (isshowEasySearch == true) {\n        var Basic = this.BasicDataALL.filter(it => {\n          return it.GroupTypeName_Fa.includes(ComboName);\n        });\n\n        for (let item of Basic) {\n          item.CodeChar = Param;\n          this.BasicDataParam6.push(item);\n        }\n\n        this.ShowEasySeachID = Param;\n      }\n\n      if (Param === \"Param1\") {\n        this.BasicDataParam1 = this.BasicDataALL.filter(it => {\n          return it.GroupTypeName_Fa.includes(ComboName);\n        });\n        return this.basicDataParam1;\n      } else if (Param === \"Param2\") {\n        this.BasicDataParam2 = this.BasicDataALL.filter(it => {\n          return it.GroupTypeName_Fa.includes(ComboName);\n        });\n      } else if (Param === \"Param3\") {\n        this.BasicDataParam3 = this.BasicDataALL.filter(it => {\n          return it.GroupTypeName_Fa.includes(ComboName);\n        });\n        return this.basicDataParam3;\n      } else if (Param === \"Param4\") {\n        this.basicDataParam4 = this.BasicDataALL.filter(it => {\n          return it.GroupTypeName_Fa.includes(ComboName);\n        });\n        return this.basicDataParam4;\n      } else if (Param === \"Param5\") {\n        this.BasicDataParam5 = this.BasicDataALL.filter(it => {\n          return it.GroupTypeName_Fa.includes(ComboName);\n        });\n        return this.basicDataParam5;\n      } else {\n        return null;\n      }\n    }\n\n    onSelectCompany(titleService) {\n      this.configService.FetchCompany_WesiteUrlGet(this.Lang, this.UserName, window.location.host).subscribe(data => {\n        if (data.length > 0) {\n          this.Company = data[0];\n          this.them.CompanyID = data[0].ID.toString();\n          this.them.CompanyName = data[0].Name.toString();\n          ;\n          this.them.BackgroundImageUrl = data[0].BackgroundUrl != null ? this.them.configUrlBasicImage + data[0].BackgroundUrl.toString() : '~/assets/image/home.jpg';\n          this.them.LogoUrl = data[0].LogoUrl != null ? this.them.configUrlBasicImage + data[0].LogoUrl.toString() : '~/assets/image/logo.jpg';\n          this.them.HeaderColor = data[0].HeaderColor != null ? data[0].HeaderColor.toString() : '#55407d';\n          this.them.ButtonColor = data[0].ButtonColor != null ? data[0].ButtonColor.toString() : '#adc867';\n          this.them.HeaderFontColor = data[0].HeaderFontColor != null ? data[0].HeaderFontColor.toString() : '#fff';\n          this.them.ButtonFontColor = data[0].ButtonFontColor != null ? data[0].ButtonFontColor.toString() : '#fff';\n          this.them.PriceColor = data[0].PriceColor != null ? data[0].PriceColor.toString() : '#ff006c';\n          this.them.PriceFontColor = data[0].PriceFontColor != null ? data[0].PriceFontColor.toString() : '#fff';\n          document.getElementById('favicon').setAttribute(\"href\", this.them.LogoUrl);\n          document.getElementById('Namd1').innerHTML = data[0].NamadTag == null || data[0].NamadTag == undefined ? '' : data[0].NamadTag.toString();\n          document.getElementById('Namd2').innerHTML = data[0].LicenseTag1 == null || data[0].LicenseTag1 == undefined ? '' : data[0].LicenseTag1.toString();\n          document.getElementById('Namd3').innerHTML = data[0].LicenseTag2 == null || data[0].LicenseTag2 == undefined ? '' : data[0].LicenseTag2.toString(); //--------------------عنوان صفحه مشخص شود---------------------------\n\n          titleService.setTitle(this.them.CompanyName);\n        }\n      }); //----------------گروه محصولات هر شرکت\n\n      this.GetProducGroup(); //-----------------صفحه جدید---------\n\n      this.configService.Fetch_FilterPageMenuActive().subscribe(data => {\n        this.MenuView = data;\n      }); //---------------هدر سایت------------\n\n      this.onPageGroupSelect(5); //---------------فوتر سایت-----------\n\n      this.onPageGroupSelect(4);\n    } //   <option value=\"0\">صفحه جدید</option>\n    //   <option value=\"1\">صفحه اصلی</option>\n    //   <option value=\"2\">صفحه نتیجه جستجو</option>\n    //   <option value=\"3\">صفحه سبد خرید</option>\n    //   <option value=\"4\">داخل فوتر سایت</option>\n    //<option value=\"5\">داخل هدر سایت</option>\n    //   <option value=\"6\">صفجه خرید های من</option>\n    //   <option value=\"7\">داخل تصویر جستجو صفحه اصلی</option>\n\n\n    onPageGroupSelect(PageLocationID) {\n      this.configService.Fetch_FilterPageGeneratorGet(this.Lang, this.UserName, this.them.CompanyID, null, null, PageLocationID.toString(), 'true').subscribe(data => {\n        if (PageLocationID == 0) {\n          this.PageGenerator_0 = data.filter(a => a.PageLocationID == PageLocationID);\n        }\n\n        if (PageLocationID == 1) {\n          this.PageGenerator_1 = data.filter(a => a.PageLocationID == PageLocationID);\n          if (this.PageGenerator_1.length > 0) document.getElementById('PageGenerator_1').innerHTML = this.PageGenerator_1[0].PageContent;\n        }\n\n        if (PageLocationID == 2) {\n          this.PageGenerator_2 = data.filter(a => a.PageLocationID == PageLocationID);\n          if (this.PageGenerator_2.length > 0) document.getElementById('PageGenerator_2').innerHTML = this.PageGenerator_2[0].PageContent;\n        }\n\n        if (PageLocationID == 3) {\n          this.PageGenerator_3 = data.filter(a => a.PageLocationID == PageLocationID);\n          if (this.PageGenerator_3.length > 0) document.getElementById('PageGenerator_3').innerHTML = this.PageGenerator_3[0].PageContent;\n        }\n\n        if (PageLocationID == 4) {\n          this.PageGenerator_4 = data.filter(a => a.PageLocationID == PageLocationID);\n          if (this.PageGenerator_4.length > 0) document.getElementById('PageGenerator_4').innerHTML = this.PageGenerator_4[0].PageContent;\n        }\n\n        if (PageLocationID == 5) {\n          this.PageGenerator_5 = data.filter(a => a.PageLocationID == PageLocationID);\n          if (this.PageGenerator_5.length > 0) document.getElementById('PageGenerator_5').innerHTML = this.PageGenerator_5[0].PageContent;\n        }\n\n        if (PageLocationID == 6) {\n          this.PageGenerator_6 = data.filter(a => a.PageLocationID == PageLocationID);\n          if (this.PageGenerator_6.length > 0) document.getElementById('PageGenerator_6').innerHTML = this.PageGenerator_6[0].PageContent;\n        }\n\n        if (PageLocationID == 7) {\n          this.PageGenerator_7 = data.filter(a => a.PageLocationID == PageLocationID);\n\n          if (this.PageGenerator_7.length > 0) {\n            document.getElementById('PageGenerator_7').innerHTML = this.PageGenerator_7[0].PageContent;\n          } else {\n            document.getElementById('PageGenerator_7').style.display = 'none';\n          }\n        }\n      });\n    }\n\n    onPageSelect(ID) {\n      this.configService.Fetch_FilterPageGeneratorID(this.Lang, this.UserName, ID).subscribe(data => {\n        ;\n        this.PageGenerator = data;\n        this.PageInfo = this.PageGenerator[0].PageContent;\n        this.PageHeader = this.PageGenerator[0].PageTitle;\n        document.getElementById('PageNew').innerHTML = this.PageGenerator[0].PageContent; //--------------------عنوان صفحه مشخص شود---------------------------\n\n        this.titleService.setTitle(this.them.CompanyName + \"-\" + this.PageHeader);\n        return this.PageGenerator[0].PageContent;\n      });\n      return '';\n    } //----------------گروه محصولات هر شرکت\n\n\n    GetProducGroup() {\n      this.configService.Fetch_FilterCompanyProductGroupGet(this.them.CompanyID, this.Lang).subscribe(data => {\n        this.CompanyProductGroup = data.filter(a => a.CountProduct > 0);\n\n        if (data.length > 0) {\n          this.them.ProductGroupNameForFirst = data[0].Title;\n          this.them.ProductGroupForFirst = data[0].ID.toString();\n        }\n      });\n    }\n\n    InsertProductUserComment(params) {\n      let result;\n      this.configService.InsertProductUserComment(params).subscribe(data => {\n        result = data;\n        console.log('Update : ' + result);\n\n        if (result === '0') {\n          this.them.SeupAlert(null, 'alert-Info');\n          this.them.ShowAlert('alert-Info');\n        } else {\n          if (this.Lang == 'fa') {\n            this.them.AlertLis.Title = 'خطا';\n            this.them.AlertLis.Body = result;\n            this.them.SeupAlert(this.them.AlertLis, 'alert-warning');\n          } else {\n            this.them.AlertLis.Title = 'Error';\n            this.them.AlertLis.Body = result;\n            this.them.SeupAlert(this.them.AlertLis, 'alert-warning');\n          }\n\n          this.them.ShowAlert('alert-warning');\n        }\n      });\n    }\n\n    SelectProductComment(ProductID) {\n      this.configService.Fetch_FilterProductUserCommentGet(this.Lang, '', '', ProductID, this.them.CompanyID, 'true').subscribe(data => {\n        this.ProductUserComment = data;\n      });\n    }\n\n    RouterProductDetail(id, type, IsHomePage) {\n      if (IsHomePage) {\n        var testDiv = document.getElementById(type + id);\n        this.them.ScrollY = testDiv.offsetTop; //this.router.navigate(['/p/' + id + '/home']);\n\n        return '/p/' + id + '/home';\n      } else {\n        this.them.ScrollY = window.scrollY; //this.router.navigate(['/p/' + id]);\n\n        return '/p/' + id;\n      }\n    }\n\n    SearchSameProduct(ProductID) {\n      this.configService.FetchProductSelect_SameProduc(this.Lang, '', ProductID, this.them.CompanyID).subscribe(data => {\n        this.ProductSearch = data;\n      });\n    }\n\n    onSelectProductOrder(ProductID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this.configService.Fetch_FilterProductID(this.Lang, this.UserName, ProductID.toString()).subscribe(data => {\n          console.log('onSelectProductOrder 2: ');\n          let basket = JSON.parse(localStorage.getItem('basket'));\n\n          if (basket != null) {\n            for (let i = 0; i < basket.OrderDetails.length; i++) {\n              if (basket.OrderDetails[i].ProductID == ProductID) {\n                Swal.fire({\n                  title: 'خطا!',\n                  text: 'این محصول قبلا به سفارشات شما اضافه شده است.',\n                  icon: 'error',\n                  confirmButtonText: 'تایید',\n                  confirmButtonColor: this.them.ButtonColor\n                });\n              }\n\n              this.Order.OrderDetails.push(basket.OrderDetails[i]);\n            }\n\n            localStorage.clear();\n          }\n\n          let count = this.Order.OrderDetails.filter(a => a.ProductID == ProductID).length;\n          let OrderDetail = {\n            ProductID: data[0].ID,\n            ProducName: data[0].Name,\n            ShoppingCount: Number(count + 1),\n            AvalaibleCount: Number(data[0].AvailableCount),\n            UnitPrice: data[0].PriceSales,\n            TotalPrice: Number(data[0].PriceSales) * Number(count + 1),\n            TotalDiscount: Number(data[0].DiscountPrice) * Number(count + 1),\n            Total: 0,\n            OrderID: null,\n            CompanyID: this.them.CompanyID\n          }; //const sum = this.productservice.Order.OrderDetails.reduce((sum, current) => sum + Number(current.UnitPrice) * Number(current.ShoppingCount), 0);\n\n          if (OrderDetail.AvalaibleCount >= OrderDetail.ShoppingCount) {\n            this.Order.OrderDetails.push(OrderDetail);\n            this.Total = this.Order.OrderDetails.reduce((sum, current) => sum + Number(current.UnitPrice) * Number(current.ShoppingCount), 0);\n            this.TotalDiscount = this.Order.OrderDetails.reduce((sum, current) => sum + Number(current.TotalDiscount), 0);\n            this.Total = Number(this.Total) - Number(this.TotalDiscount);\n            console.log('productservice', this.Order.OrderDetails);\n            localStorage.setItem(\"basket\", JSON.stringify(this.Order)); //-------------------------------\n\n            window.scroll({\n              top: 0,\n              behavior: 'smooth'\n            }); //----------------------------\n\n            this.them.TotalShopping = this.Order.OrderDetails.length.toString();\n          } else {\n            if (this.them.Lang == 'fa') {\n              Swal.fire({\n                title: 'خطا!',\n                text: 'موجودی محصول کافی نیست',\n                icon: 'error',\n                confirmButtonText: 'تایید',\n                confirmButtonColor: this.them.ButtonColor\n              });\n            } else {\n              Swal.fire({\n                title: 'Error!',\n                text: 'product inventory is not enough',\n                icon: 'error',\n                confirmButtonText: 'OK',\n                confirmButtonColor: this.them.ButtonColor\n              });\n            }\n          }\n        });\n      });\n    }\n\n  }\n\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.ConfigService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.them), i0.ɵɵinject(i4.Title));\n  };\n\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}